{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lineo\\\\Videos\\\\SchoolSystem (2)\\\\SchoolSystem\\\\luct-reporting-system\\\\src\\\\lecturer\\\\GradeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../AuthContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GradeForm() {\n  _s();\n  const {\n    user,\n    logout\n  } = useContext(AuthContext);\n  const {\n    course_id\n  } = useParams();\n  const navigate = useNavigate();\n  const [classes, setClasses] = useState([]);\n  const [students, setStudents] = useState([]);\n  const [formData, setFormData] = useState({\n    class_id: '',\n    student_id: '',\n    grade: '',\n    comments: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const token = localStorage.getItem('token');\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\n  useEffect(() => {\n    if (!user || user.role !== 'Lecturer') {\n      navigate('/unauthorized');\n      return;\n    }\n    if (!token) {\n      logout();\n      navigate('/login');\n      return;\n    }\n    if (!course_id || isNaN(parseInt(course_id))) {\n      setError('Invalid Course ID. Please select a valid course from the dashboard.');\n      return;\n    }\n    const fetchClasses = async () => {\n      try {\n        const res = await fetch(`${apiUrl}/lecturer/classes`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (res.status === 401 || res.status === 403) {\n          logout();\n          navigate('/login');\n          return;\n        }\n        if (!res.ok) {\n          const data = await res.json().catch(() => ({}));\n          throw new Error(data.error || 'Failed to fetch classes');\n        }\n        const data = await res.json();\n        const filteredClasses = Array.isArray(data) ? data.filter(cls => cls.course_ids.includes(parseInt(course_id))) : [];\n        setClasses(filteredClasses);\n        if (filteredClasses.length === 0) {\n          setError('No classes assigned for this course.');\n        }\n      } catch (err) {\n        console.error('Fetch classes error:', err);\n        setError(err.message || 'Failed to load classes.');\n      }\n    };\n    const fetchStudents = async () => {\n      try {\n        const res = await fetch(`${apiUrl}/student-courses?course_id=${encodeURIComponent(course_id)}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (res.status === 401 || res.status === 403) {\n          setError('You are not authorized to access this course.');\n          logout();\n          navigate('/login');\n          return;\n        }\n        if (!res.ok) {\n          const data = await res.json().catch(() => ({}));\n          throw new Error(data.error || 'Failed to fetch students');\n        }\n        const data = await res.json();\n        setStudents(Array.isArray(data) ? data : []);\n        if (data.length === 0) {\n          setError(prev => prev || 'No students enrolled in this course.');\n        }\n      } catch (err) {\n        console.error('Fetch students error:', err);\n        setError(prev => prev || err.message || 'Failed to load students.');\n      }\n    };\n    fetchClasses();\n    fetchStudents();\n  }, [user, logout, navigate, token, course_id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (!formData.class_id || !formData.student_id || !formData.grade) {\n      setError('Class, student, and grade are required.');\n      return;\n    }\n    const grade = parseFloat(formData.grade);\n    if (isNaN(grade) || grade < 0 || grade > 100) {\n      setError('Grade must be a number between 0 and 100.');\n      return;\n    }\n    if (formData.comments.length > 500) {\n      setError('Comments must be 500 characters or less.');\n      return;\n    }\n    try {\n      const res = await fetch(`${apiUrl}/grades`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          student_id: formData.student_id,\n          course_id: parseInt(course_id),\n          class_id: formData.class_id,\n          grade,\n          comments: formData.comments || null\n        })\n      });\n      if (res.status === 401 || res.status === 403) {\n        setError('You are not authorized to submit grades for this class.');\n        return;\n      }\n      if (!res.ok) {\n        const data = await res.json().catch(() => ({}));\n        throw new Error(data.error || 'Failed to submit grade');\n      }\n      setSuccess('Grade submitted successfully!');\n      setFormData({\n        class_id: '',\n        student_id: '',\n        grade: '',\n        comments: ''\n      });\n    } catch (err) {\n      console.error('Submit grade error:', err);\n      setError(err.message || 'Failed to submit grade.');\n    }\n  };\n  const isFormValid = formData.class_id && formData.student_id && formData.grade && !isNaN(parseFloat(formData.grade)) && parseFloat(formData.grade) >= 0 && parseFloat(formData.grade) <= 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Assign Grade for Course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      \"aria-live\": \"assertive\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      \"aria-live\": \"assertive\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"class_id\",\n          className: \"form-label\",\n          children: [\"Class \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"class_id\",\n          name: \"class_id\",\n          className: \"form-select\",\n          value: formData.class_id,\n          onChange: handleChange,\n          required: true,\n          \"aria-required\": \"true\",\n          disabled: classes.length === 0,\n          \"aria-describedby\": \"class_id_help\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), classes.map(cls => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cls.id,\n            children: [cls.name, \" (\", cls.course_names && cls.course_names.length > 0 ? cls.course_names.join(', ') : 'No course assigned', \")\"]\n          }, cls.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), classes.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"class_id_help\",\n          className: \"form-text text-muted\",\n          children: \"No classes available. Contact your administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"student_id\",\n          className: \"form-label\",\n          children: [\"Student \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"student_id\",\n          name: \"student_id\",\n          className: \"form-select\",\n          value: formData.student_id,\n          onChange: handleChange,\n          required: true,\n          \"aria-required\": \"true\",\n          disabled: students.length === 0,\n          \"aria-describedby\": \"student_id_help\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), students.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: student.student_id,\n            children: [student.full_name, \" (\", student.email, \")\"]\n          }, student.student_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), students.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"student_id_help\",\n          className: \"form-text text-muted\",\n          children: \"No students available. Contact your administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"grade\",\n          className: \"form-label\",\n          children: [\"Grade (0-100) \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"grade\",\n          name: \"grade\",\n          className: \"form-control\",\n          value: formData.grade,\n          onChange: handleChange,\n          min: \"0\",\n          max: \"100\",\n          step: \"0.01\",\n          required: true,\n          \"aria-required\": \"true\",\n          \"aria-describedby\": \"grade_help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"grade_help\",\n          className: \"form-text\",\n          children: \"Enter a grade between 0 and 100.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comments\",\n          className: \"form-label\",\n          children: \"Comments (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comments\",\n          name: \"comments\",\n          className: \"form-control\",\n          value: formData.comments,\n          onChange: handleChange,\n          maxLength: \"500\",\n          rows: \"4\",\n          \"aria-describedby\": \"comments_help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"comments_help\",\n          className: \"form-text\",\n          children: [\"Maximum 500 characters. \", formData.comments.length, \"/500\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: !isFormValid,\n        \"aria-disabled\": !isFormValid,\n        children: \"Submit Grade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary ms-2\",\n        onClick: () => navigate('/lecturer/dashboard'),\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(GradeForm, \"KBtarlLSo/pIAZVkxIZePktk64Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GradeForm;\nexport default GradeForm;\nvar _c;\n$RefreshReg$(_c, \"GradeForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","AuthContext","jsxDEV","_jsxDEV","GradeForm","_s","user","logout","course_id","navigate","classes","setClasses","students","setStudents","formData","setFormData","class_id","student_id","grade","comments","error","setError","success","setSuccess","token","localStorage","getItem","apiUrl","process","env","REACT_APP_API_URL","role","isNaN","parseInt","fetchClasses","res","fetch","headers","Authorization","status","ok","data","json","catch","Error","filteredClasses","Array","isArray","filter","cls","course_ids","includes","length","err","console","message","fetchStudents","encodeURIComponent","prev","handleChange","e","name","value","target","handleSubmit","preventDefault","parseFloat","method","body","JSON","stringify","isFormValid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","noValidate","htmlFor","id","onChange","required","disabled","map","course_names","join","student","full_name","email","type","min","max","step","maxLength","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lineo/Videos/SchoolSystem (2)/SchoolSystem/luct-reporting-system/src/lecturer/GradeForm.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../AuthContext';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction GradeForm() {\r\n  const { user, logout } = useContext(AuthContext);\r\n  const { course_id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [classes, setClasses] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    class_id: '',\r\n    student_id: '',\r\n    grade: '',\r\n    comments: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const token = localStorage.getItem('token');\r\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:4000';\r\n\r\n  useEffect(() => {\r\n    if (!user || user.role !== 'Lecturer') {\r\n      navigate('/unauthorized');\r\n      return;\r\n    }\r\n    if (!token) {\r\n      logout();\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    if (!course_id || isNaN(parseInt(course_id))) {\r\n      setError('Invalid Course ID. Please select a valid course from the dashboard.');\r\n      return;\r\n    }\r\n\r\n    const fetchClasses = async () => {\r\n      try {\r\n        const res = await fetch(`${apiUrl}/lecturer/classes`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (res.status === 401 || res.status === 403) {\r\n          logout();\r\n          navigate('/login');\r\n          return;\r\n        }\r\n        if (!res.ok) {\r\n          const data = await res.json().catch(() => ({}));\r\n          throw new Error(data.error || 'Failed to fetch classes');\r\n        }\r\n        const data = await res.json();\r\n        const filteredClasses = Array.isArray(data)\r\n          ? data.filter((cls) => cls.course_ids.includes(parseInt(course_id)))\r\n          : [];\r\n        setClasses(filteredClasses);\r\n        if (filteredClasses.length === 0) {\r\n          setError('No classes assigned for this course.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Fetch classes error:', err);\r\n        setError(err.message || 'Failed to load classes.');\r\n      }\r\n    };\r\n\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const res = await fetch(`${apiUrl}/student-courses?course_id=${encodeURIComponent(course_id)}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (res.status === 401 || res.status === 403) {\r\n          setError('You are not authorized to access this course.');\r\n          logout();\r\n          navigate('/login');\r\n          return;\r\n        }\r\n        if (!res.ok) {\r\n          const data = await res.json().catch(() => ({}));\r\n          throw new Error(data.error || 'Failed to fetch students');\r\n        }\r\n        const data = await res.json();\r\n        setStudents(Array.isArray(data) ? data : []);\r\n        if (data.length === 0) {\r\n          setError((prev) => prev || 'No students enrolled in this course.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Fetch students error:', err);\r\n        setError((prev) => prev || err.message || 'Failed to load students.');\r\n      }\r\n    };\r\n\r\n    fetchClasses();\r\n    fetchStudents();\r\n  }, [user, logout, navigate, token, course_id]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    if (!formData.class_id || !formData.student_id || !formData.grade) {\r\n      setError('Class, student, and grade are required.');\r\n      return;\r\n    }\r\n    const grade = parseFloat(formData.grade);\r\n    if (isNaN(grade) || grade < 0 || grade > 100) {\r\n      setError('Grade must be a number between 0 and 100.');\r\n      return;\r\n    }\r\n    if (formData.comments.length > 500) {\r\n      setError('Comments must be 500 characters or less.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`${apiUrl}/grades`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          student_id: formData.student_id,\r\n          course_id: parseInt(course_id),\r\n          class_id: formData.class_id,\r\n          grade,\r\n          comments: formData.comments || null,\r\n        }),\r\n      });\r\n      if (res.status === 401 || res.status === 403) {\r\n        setError('You are not authorized to submit grades for this class.');\r\n        return;\r\n      }\r\n      if (!res.ok) {\r\n        const data = await res.json().catch(() => ({}));\r\n        throw new Error(data.error || 'Failed to submit grade');\r\n      }\r\n      setSuccess('Grade submitted successfully!');\r\n      setFormData({\r\n        class_id: '',\r\n        student_id: '',\r\n        grade: '',\r\n        comments: '',\r\n      });\r\n    } catch (err) {\r\n      console.error('Submit grade error:', err);\r\n      setError(err.message || 'Failed to submit grade.');\r\n    }\r\n  };\r\n\r\n  const isFormValid = formData.class_id && formData.student_id && formData.grade && !isNaN(parseFloat(formData.grade)) && parseFloat(formData.grade) >= 0 && parseFloat(formData.grade) <= 100;\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"mb-4\">Assign Grade for Course</h2>\r\n      {error && (\r\n        <div className=\"alert alert-danger\" role=\"alert\" aria-live=\"assertive\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      {success && (\r\n        <div className=\"alert alert-success\" role=\"alert\" aria-live=\"assertive\">\r\n          {success}\r\n        </div>\r\n      )}\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"class_id\" className=\"form-label\">\r\n            Class <span className=\"text-danger\">*</span>\r\n          </label>\r\n          <select\r\n            id=\"class_id\"\r\n            name=\"class_id\"\r\n            className=\"form-select\"\r\n            value={formData.class_id}\r\n            onChange={handleChange}\r\n            required\r\n            aria-required=\"true\"\r\n            disabled={classes.length === 0}\r\n            aria-describedby=\"class_id_help\"\r\n          >\r\n            <option value=\"\">Select a class</option>\r\n            {classes.map((cls) => (\r\n              <option key={cls.id} value={cls.id}>\r\n                {cls.name} ({cls.course_names && cls.course_names.length > 0 ? cls.course_names.join(', ') : 'No course assigned'})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {classes.length === 0 && (\r\n            <div id=\"class_id_help\" className=\"form-text text-muted\">\r\n              No classes available. Contact your administrator.\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"student_id\" className=\"form-label\">\r\n            Student <span className=\"text-danger\">*</span>\r\n          </label>\r\n          <select\r\n            id=\"student_id\"\r\n            name=\"student_id\"\r\n            className=\"form-select\"\r\n            value={formData.student_id}\r\n            onChange={handleChange}\r\n            required\r\n            aria-required=\"true\"\r\n            disabled={students.length === 0}\r\n            aria-describedby=\"student_id_help\"\r\n          >\r\n            <option value=\"\">Select a student</option>\r\n            {students.map((student) => (\r\n              <option key={student.student_id} value={student.student_id}>\r\n                {student.full_name} ({student.email})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {students.length === 0 && (\r\n            <div id=\"student_id_help\" className=\"form-text text-muted\">\r\n              No students available. Contact your administrator.\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"grade\" className=\"form-label\">\r\n            Grade (0-100) <span className=\"text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"grade\"\r\n            name=\"grade\"\r\n            className=\"form-control\"\r\n            value={formData.grade}\r\n            onChange={handleChange}\r\n            min=\"0\"\r\n            max=\"100\"\r\n            step=\"0.01\"\r\n            required\r\n            aria-required=\"true\"\r\n            aria-describedby=\"grade_help\"\r\n          />\r\n          <div id=\"grade_help\" className=\"form-text\">\r\n            Enter a grade between 0 and 100.\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"comments\" className=\"form-label\">\r\n            Comments (Optional)\r\n          </label>\r\n          <textarea\r\n            id=\"comments\"\r\n            name=\"comments\"\r\n            className=\"form-control\"\r\n            value={formData.comments}\r\n            onChange={handleChange}\r\n            maxLength=\"500\"\r\n            rows=\"4\"\r\n            aria-describedby=\"comments_help\"\r\n          />\r\n          <div id=\"comments_help\" className=\"form-text\">\r\n            Maximum 500 characters. {formData.comments.length}/500\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          disabled={!isFormValid}\r\n          aria-disabled={!isFormValid}\r\n        >\r\n          Submit Grade\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary ms-2\"\r\n          onClick={() => navigate('/lecturer/dashboard')}\r\n        >\r\n          Back to Dashboard\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GradeForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}