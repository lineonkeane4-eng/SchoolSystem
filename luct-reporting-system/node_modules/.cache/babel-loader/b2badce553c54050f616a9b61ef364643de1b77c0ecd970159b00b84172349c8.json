{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lineo\\\\Videos\\\\SchoolSystem (2)\\\\SchoolSystem\\\\luct-reporting-system\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const role = localStorage.getItem('role');\n      const fullName = localStorage.getItem('fullName');\n      setUser({\n        token,\n        role,\n        fullName\n      });\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password, role) => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:4000'}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.token) {\n        if (data.role && data.role !== role) {\n          return {\n            error: 'Role mismatch, please select the correct role'\n          };\n        }\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('role', data.role);\n        localStorage.setItem('fullName', data.fullName); // Changed from data.full_name to data.fullName\n        setUser({\n          token: data.token,\n          role: data.role,\n          fullName: data.fullName\n        }); // Changed from data.full_name to data.fullName\n        return data;\n      }\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        error: 'Login failed'\n      };\n    }\n  };\n  const register = async data => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:4000'}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      return result.message === 'Registration successful, please log in' ? result : {\n        error: result.error || 'Registration failed'\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        error: 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    localStorage.removeItem('fullName');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","role","fullName","login","email","password","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","data","json","error","setItem","console","register","result","message","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lineo/Videos/SchoolSystem (2)/SchoolSystem/luct-reporting-system/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const role = localStorage.getItem('role');\r\n      const fullName = localStorage.getItem('fullName');\r\n      setUser({ token, role, fullName });\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password, role) => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:4000'}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.token) {\r\n        if (data.role && data.role !== role) {\r\n          return { error: 'Role mismatch, please select the correct role' };\r\n        }\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('role', data.role);\r\n        localStorage.setItem('fullName', data.fullName); // Changed from data.full_name to data.fullName\r\n        setUser({ token: data.token, role: data.role, fullName: data.fullName }); // Changed from data.full_name to data.fullName\r\n        return data;\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { error: 'Login failed' };\r\n    }\r\n  };\r\n\r\n  const register = async (data) => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:4000'}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const result = await response.json();\r\n      return result.message === 'Registration successful, please log in' ? result : { error: result.error || 'Registration failed' };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { error: 'Registration failed' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    localStorage.removeItem('fullName');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}