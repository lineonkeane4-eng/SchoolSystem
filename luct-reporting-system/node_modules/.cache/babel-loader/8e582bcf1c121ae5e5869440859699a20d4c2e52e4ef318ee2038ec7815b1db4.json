{"ast":null,"code":"// Api.js\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\nconst api = {\n  getUsers: async (path, token) => {\n    const response = await fetch(`${API_URL}${path}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) throw new Error('API error');\n    return response.json();\n  },\n  getUser: async (id, token) => {\n    const response = await fetch(`${API_URL}/users/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) throw new Error((await response.json()).error || 'Failed to fetch user');\n    return response.json();\n  },\n  createUser: async (path, data, token) => {\n    const response = await fetch(`${API_URL}${path}`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) throw new Error((await response.json()).error || 'Failed to create user');\n    return response.json();\n  },\n  updateUser: async (id, data, token) => {\n    const response = await fetch(`${API_URL}/users/${id}`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) throw new Error((await response.json()).error || 'Failed to update user');\n    return response.json();\n  },\n  deleteUser: async (id, token) => {\n    const response = await fetch(`${API_URL}/users/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) throw new Error((await response.json()).error || 'Failed to delete user');\n    return response.json();\n  }\n};\nexport default api;","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","api","getUsers","path","token","response","fetch","headers","Authorization","ok","Error","json","getUser","id","error","createUser","data","method","body","JSON","stringify","updateUser","deleteUser"],"sources":["C:/Users/lineo/Videos/SchoolSystem (2)/SchoolSystem/luct-reporting-system/src/Api.js"],"sourcesContent":["// Api.js\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\r\n\r\nconst api = {\r\n  getUsers: async (path, token) => {\r\n    const response = await fetch(`${API_URL}${path}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) throw new Error('API error');\r\n    return response.json();\r\n  },\r\n  getUser: async (id, token) => {\r\n    const response = await fetch(`${API_URL}/users/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) throw new Error((await response.json()).error || 'Failed to fetch user');\r\n    return response.json();\r\n  },\r\n  createUser: async (path, data, token) => {\r\n    const response = await fetch(`${API_URL}${path}`, {\r\n      method: 'POST',\r\n      headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) throw new Error((await response.json()).error || 'Failed to create user');\r\n    return response.json();\r\n  },\r\n  updateUser: async (id, data, token) => {\r\n    const response = await fetch(`${API_URL}/users/${id}`, {\r\n      method: 'PUT',\r\n      headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) throw new Error((await response.json()).error || 'Failed to update user');\r\n    return response.json();\r\n  },\r\n  deleteUser: async (id, token) => {\r\n    const response = await fetch(`${API_URL}/users/${id}`, {\r\n      method: 'DELETE',\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if (!response.ok) throw new Error((await response.json()).error || 'Failed to delete user');\r\n    return response.json();\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}